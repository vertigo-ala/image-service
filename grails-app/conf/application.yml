---
info:
    app:
        name: 'image-service'
grails:
    serverURL: 'http://dev.ala.org.au:8080'
    profile: web
    codegen:
        defaultPackage: au.org.ala.images
    gorm:
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
    assets:
        bundle: false
    config:
        locations:
            - file:///data/image-service/config/image-service-config.properties
            - file:///data/image-service/config/image-service-config.yml
            - file:///data/image-service/config/image-service-config.groovy
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        upload:
            maxFileSize: 200000000
            maxRequestSize: 200000000
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none

server:
    contextPath: ''

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false

dataSource:
    pooled: true
    jmxExport: true
    username: images
    password: 'images'

environments:
    development:
#        hibernate:
#            dialect: org.hibernate.dialect.PostgreSQLDialect
        dataSource:
            dbCreate: update
#            driverClassName: org.postgresql.Driver
            url: jdbc:postgresql://localhost/images?autoReconnect=true&connectTimeout=0&useUnicode=true&characterEncoding=UTF-8
            username: "images"
            password: "images"
    test:
        hibernate:
            dialect: org.hibernate.dialect.H2Dialect
        dataSource:
            pooled: true
            jmxExport: true
            driverClassName: org.h2.Driver
            username: 'images'
            password: 'images'
            dbCreate: update
            url: jdbc:h2:mem:images;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
        imageservice:
            imagestore:
                root: '/tmp/image-service/store'
                inbox: '/tmp/image-service/incoming'
            exportDir: '/tmp/image-service/exports'
    travis:
        hibernate:
            dialect: org.hibernate.dialect.H2Dialect
        dataSource:
            pooled: true
            jmxExport: true
            driverClassName: org.h2.Driver
            username: 'images'
            password: 'images'
            dbCreate: update
            url: jdbc:h2:mem:images;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
        imageservice:
            imagestore:
                root: '/home/travis/build/AtlasOfLivingAustralia/image-service/temp-store'
                inbox: '/home/travis/build/AtlasOfLivingAustralia/image-service/temp-incoming'
            exportDir: '/home/travis/build/AtlasOfLivingAustralia/image-service/temp-exports'

    production:
        hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
        dataSource:
            dbCreate: update
            driverClassName: org.postgresql.Driver
            url: jdbc:postgresql://localhost/images?autoReconnect=true&connectTimeout=0&useUnicode=true&characterEncoding=UTF-8
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
security:
    cas:
        appServerName: 'http://dev.ala.org.au:8080'
        uriFilterPattern: '/admin/.*,/admin,/admin/,/image/deleteImage/.*'
        authenticateOnlyIfLoggedInPattern:  '/ws/createSubimage'
        bypass: false
        disableCAS: false

imageservice:
    imagestore:
        root: '/data/image-service/store'
        inbox: '/data/image-service/incoming'
    apache:
        root: 'http://localhost:8880/store/'
        # space separated list
        multiple_roots: 'http://localhost:8880/store/'
    exportDir: '/data/image-service/exports'
    thumbnail:
        size: 300

serverName: 'http://devt.ala.org.au:8080'

skin:
    layout: 'main'
    fluidLayout: true

quartz:
    autoStartup: true
    jdbcStore : false
    waitForJobsToCompleteOnShutdown: true
    exposeSchedulerInRepository: false
    props:
        scheduler:
            skipUpdateCheck: true

---
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: true
    jmx:
        enabled: true

placeholder:
    sound:
        thumbnail: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Speaker_Icon.svg/200px-Speaker_Icon.svg.png"
        large: "https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Speaker_Icon.svg/500px-Speaker_Icon.svg.png"
    document:
        thumbnail: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/Document_icon_%28the_Noun_Project_27904%29.svg/200px-Document_icon_%28the_Noun_Project_27904%29.svg.png"
        large: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/Document_icon_%28the_Noun_Project_27904%29.svg/500px-Document_icon_%28the_Noun_Project_27904%29.svg.png"
    missing:
        thumbnail: "https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/Document_icon_%28the_Noun_Project_27904%29.svg/200px-Document_icon_%28the_Noun_Project_27904%29.svg.png"

swagger:
    info:
        description: "API Documentation for Image Services"
        version: "2.0"
        title: "Image Service API"
        termsOfServices: "https://www.ala.org.au/who-we-are/terms-of-use/"
        contact:
            name: "ALA Support"
            url: "https://www.ala.org.au"
            email: "support@ala.org.au"
        license:
            name: "MPL 1.1"
            url: "https://www.mozilla.org/en-US/MPL/"
    schemes:
        - "HTTP"
    consumes:
        - "application/json"
    components:
        securitySchemes:
            apiKey:
                type: "apiKey"
                description: "Authentication via ALA apikey in request header"
                in: "header"
                name: "Authorization"

facets: ["recognisedLicence", "dataResourceUid", "creator.keyword", "imageSize", "fileType", "format", "dateUploadedYearMonth"]

analytics:
    credentialsJson: "/data/image-service/config/google-analytics.json"
    URL: "https://www.google-analytics.com"
    ID: "UA-4355440-1"
    baseURL: "https://www.googleapis.com/analytics/v3/data/ga"
    viewID: "ga:197294038"
    trackThumbnails: false
    trackLargeViewer: false
    trackDetailedView: false

elasticsearch:
  indexName: "images"
  host: "127.0.0.1"
  scheme: "http"
  port1: 9200
  port2: 9201
  maxFacetSize: 10000
  maxOffset: 10000
  maxPageSize: 200
  defaultPageSize: 10

# External links
collectory:
    baseURL: "https://collections.ala.org.au"
biocache:
    baseURL: "https://biocache.ala.org.au"

